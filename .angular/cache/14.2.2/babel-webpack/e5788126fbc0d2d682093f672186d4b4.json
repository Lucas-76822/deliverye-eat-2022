{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nlet PedidoComponent = class PedidoComponent {\n  constructor( //private articulosService: MockArticulosService,\n  //private articulosFamiliasService: MockArticulosFamiliasService,\n  modalDialogService, pd) {\n    this.modalDialogService = modalDialogService;\n    this.pd = pd;\n    this.Titulo = 'Pedido';\n    this.TituloAccionABMC = {\n      A: '(Agregar)',\n      B: '(Eliminar)',\n      M: '(Modificar)',\n      C: '(Consultar)',\n      L: '(Listado)'\n    };\n    this.AccionABMC = 'L'; // inicialmente inicia en el Listado de articulos (buscar con parametros)\n\n    this.Mensajes = {\n      SD: ' No se encontraron registros...',\n      RD: ' Revisar los datos ingresados...'\n    }; //Items: Articulo[] = null;\n    //RegistrosTotal: number;\n    //Familias: ArticuloFamilia[] = [];\n    // opciones de combo\n\n    this.OcionesCiudad = [{\n      Id: null,\n      Nombre: ''\n    }, {\n      Id: 1,\n      Nombre: 'Cordoba'\n    }, {\n      Id: 2,\n      Nombre: 'Carlos Paz'\n    }, {\n      Id: 3,\n      Nombre: 'Jesu Maria'\n    }, {\n      Id: 4,\n      Nombre: 'Calamuchita'\n    }];\n    this.OpcionesFormaPago = [{\n      Id: 1,\n      Nombre: 'Efectivo'\n    }, {\n      Id: 2,\n      Nombre: 'Credito/Debito'\n    }];\n    this.OpcionesFormaEntrega = [{\n      Id: 1,\n      Nombre: 'Inmediata'\n    }, {\n      Id: 2,\n      Nombre: 'Acordar Fecha y Hora'\n    }];\n    this.opSelec = 1;\n    this.opFormaEntrega = 1;\n    this.FormRegistro = new FormGroup({\n      Calle: new FormControl('', [Validators.required]),\n      Altura: new FormControl(null, [Validators.required, Validators.pattern('[0-9]{1,10}')]),\n      Referencia: new FormControl('', [Validators.maxLength(300)]),\n      Activo: new FormControl(1, [Validators.required]),\n      Entrega: new FormControl(1, [Validators.required]),\n      Ciudad: new FormControl(null, [Validators.required])\n    });\n    this.FormDebito = new FormGroup({\n      Nombre: new FormControl('', [Validators.required]),\n      Tarjeta: new FormControl(null, [Validators.required, Validators.pattern('5[0-9]{15,15}')]),\n      CVV: new FormControl(null, [Validators.required, Validators.pattern('[0-9]{3,3}')]),\n      FechaVencimiento: new FormControl('', [Validators.required, Validators.pattern('(0[1-9]|[12][0-9]|3[01])[-/](0[1-9]|1[012])[-/](202)[2-9]{1}')])\n    });\n    this.FormEfectivo = new FormGroup({\n      Monto: new FormControl(null, [Validators.required, Validators.pattern('[0-9]{1,10}')])\n    });\n    this.FormFechaHora = new FormGroup({\n      FechaAlta: new FormControl('', [Validators.required //Validators.pattern('(0[1-9]|[12][0-9]|3[01])[-/](0[1-9]|1[012])[-/](202)[2-9]{1}'),\n      ]),\n      Hora: new FormControl('', [Validators.required //Validators.pattern('(0[1-9]|[12][0-9]|3[01])[-/](0[1-9]|1[012])[-/](202)[2-9]{1}'),\n      ])\n    });\n    this.submitted = false;\n  }\n\n  ngOnInit() {\n    this.fechaActual = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate(), new Date().getHours(), new Date().getMinutes());\n    this.fechaStrActual = this.pd.transform(this.fechaActual, \"yyyy-MM-dd\");\n    this.horaStrActual = this.pd.transform(this.fechaActual, \"hh:mm\");\n  }\n\n  Volver() {\n    this.AccionABMC = 'L';\n  }\n\n  mensajeConfirmacion() {\n    this.submitted = true; // verificar que los validadores esten OK\n\n    if (this.FormRegistro.invalid && this.opFormaEntrega == 1 && (this.FormDebito.invalid || this.FormEfectivo.invalid) || this.FormRegistro.invalid && this.opFormaEntrega == 2 && this.FormFechaHora.invalid && (this.FormDebito.invalid || this.FormEfectivo.invalid)) {\n      return;\n    }\n\n    this.modalDialogService.Confirm('Su pedido se ha realizado de forma exitosa.');\n  }\n\n};\nPedidoComponent = __decorate([Component({\n  selector: 'app-pedido',\n  templateUrl: './pedido.component.html',\n  styleUrls: ['./pedido.component.css']\n})], PedidoComponent);\nexport { PedidoComponent };","map":null,"metadata":{},"sourceType":"module"}